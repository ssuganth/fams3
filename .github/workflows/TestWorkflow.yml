name: BuildPushSearchAPIToDEV
on:
  workflow_dispatch:
    inputs:
        app:
          type: choice
          description: Select a component Image to deploy
          options:
          - -Select-
          - search-api
          - request-api
          required: true
        tag:
            description: 'Target image tag to build and deploy'     
            required: true
            default: 'exptag'
        env:
            description: 'Image Target Env'  
            required: true
            default: 'dev'
      
jobs:
  build-push-image:
    name: build-push-image
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.env }}
    env: 
      app: ${{github.event.inputs.app}}
      tag: ${{github.event.inputs.tag}}
      targetenv: ${{ github.event.inputs.env }}

    steps:
      - name: Checkout Code
        uses: actions/checkout@v2
        with:
          path: .
      
      - name: Fetch Project Path
        id: fetch_projectpath
        env:
          appname: ${{ env.app }}
        run: >-
          echo ::set-output name=PATH::$(
            jq -r .ProjectMapping.\"${appname}\" ./projectpathmapping.json
          )

      - name: Print Env Variables
        env:
          PROJECT_PATH: ${{ steps.fetch_projectpath.outputs.PATH }}
        run: |
          echo "Release Environment: Dev"
          echo "Release App: ${{ env.app }}"
          echo "Project Build Path: ${PROJECT_PATH}"
          echo "Release Tag: ${{ env.tag }}"
          echo "Release Env: ${{ env.targetenv }}"

      - name: Login to OpenShift Container Repository
        uses: docker/login-action@v1
        with:
          registry: ${{secrets.OPENSHIFT_EXTERNAL_REPOSITORY}}
          username: ssuganth77
          password: sha256~RqecbRJ97AmtKenINr-1cg0gDDFVrUFsyWNTXq7rFg4
      
      - name: Pull Builder Image from OpenShift Container Repository
        env:
          IMAGE: ${{secrets.OPENSHIFT_EXTERNAL_REPOSITORY}}/${{secrets.OPENSHIFT_TOOLS_NAMESPACE}}/dotnet31-rhel7:sdk-custom
        run: docker pull ${IMAGE}

      - name: Build Application Image using S2I
        id: build_image
        uses: redhat-actions/s2i-build@v2
        with:
            path_context: ./app
            builder_image:  ${{secrets.OPENSHIFT_EXTERNAL_REPOSITORY}}/${{secrets.OPENSHIFT_TOOLS_NAMESPACE}}/dotnet31-rhel7:sdk-custom
            image: ${{ env.app}}
            tags: ${{ env.tag }}
            env_vars: |
              DOTNET_STARTUP_PROJECT=${{ steps.fetch_projectpath.outputs.PATH }}
              DOTNET_CONFIGURATION=Release
              DOTNET_PACK=true
              WORKDIR=/opt/app-root/src
              DOTNET_INCREMENTAL=true
              DOTNET_RESTORE_CONFIGFILE=./NuGet.config
              NEXUS_REPO_USER=${{ secrets.NEXUS_REPO_USER }}
              NEXUS_REPO_PASSWORD=${{ secrets.NEXUS_REPO_PASSWORD }}
              NEXUS_REPO_URL=${{ secrets.NEXUS_URL }}
      
      - name: Push Application Image to Openshift ImageStream & Deploy to Dev
        env:
          SOURCE_IMAGE: ${{ env.app}}:${{ env.tag }}
          TARGET_IMAGE: ${{secrets.OPENSHIFT_EXTERNAL_REPOSITORY}}/${{secrets.OPENSHIFT_TOOLS_NAMESPACE}}/${{ env.app}}:${{ env.tag }}
        run: |
          docker tag ${SOURCE_IMAGE} ${TARGET_IMAGE}
          docker push ${TARGET_IMAGE}
